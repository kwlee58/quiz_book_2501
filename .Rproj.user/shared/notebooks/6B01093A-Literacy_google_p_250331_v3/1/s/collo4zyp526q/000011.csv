"0",""
"0","#> id 또는 name 틀린 사람 찾아서 수정하기"
"0","# 1. 잘못된 id 또는 name 가진 행 찾기"
"0","literacy_wrong_ids <- literacy_roll %>%"
"0","  anti_join(class_roll, by = c(""id"", ""name"")) "
"0","# 2. 수정 전 원래의 id와 name 쌍을 저장"
"0","wrong_keys <- literacy_wrong_ids %>% "
"0","  select(id, name)"
"0","# 3.잘못된 id 또는 name 수정"
"0","literacy_wrong_ids <- literacy_wrong_ids %>%"
"0","  mutate("
"0","    id = case_when("
"0","      id == ""202013353"" ~ ""20213353"","
"0","      id == ""문화산업"" & name == ""ZOU YUANYUAN"" ~ ""20218005"","
"0","      id == ""202244144"" ~ ""20244144"","
"0","      TRUE ~ id"
"0","      ),"
"0","    name = case_when("
"0","      name == ""윤어진ㅁ"" ~ ""윤어진"","
"0","      TRUE ~ name"
"0","      ),"
"0","    dept = case_when("
"0","      dept == ""20218005"" ~ ""문화산업"","
"0","      TRUE ~ dept"
"0","      ),"
"0","    )"
"0","# 3. quiz 에서 id 혹은 name 틀린 행을 제거하고 옳은 id 갖춘 행으로 교체하기"
"0","literacy_roll <- literacy_roll %>%"
"0","  anti_join(wrong_keys %>% select(id, name), by = c(""id"", ""name"")) %>%"
"0","  bind_rows(literacy_wrong_ids)"
"0","#>============================="
"0",""
"0","#> literacy_roll 에서 학과, 이름 제거하기"
"0","literacy_roll <- literacy_roll %>%"
"0","  select(-dept, -name)"
"0","#> literacy_roll 에 group 추가하기"
"0","literacy_roll <- literacy_roll %>%"
"0","  mutate(group = class_roll$group[match(id, class_roll$id)])"
"0","# literacy_roll$group <- class_roll$group[match(literacy_roll$id, class_roll$id)]"
"0","#> 1, 2, 3, 4 번호만 남기고 뒤의 글자는 모두 지우기"
"0","# literacy_roll[-c(1, 27)] %>%"
"0","#   sapply(table)"
"0","# literacy_roll[2:26] %<>% "
"0","#   sapply(FUN = {. %>% substr(start = 1, stop = 1)})"
"0","# sapply(FUN = function(x) substr(x, 1, 1))"
"0","literacy_roll[2:26] %<>% "
"0","  sapply(FUN = {. %>% strsplit(split = ""[.]"") %>% sapply(`[`, 1)})"
"0","kable(literacy_roll)"
